{"version":3,"sources":["context/ThemeContext.js","context/CartContext.js","context/LocaleContext.js","components/Auth.js","components/LocaleSelector.js","components/ThemeSelector.js","components/Header.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js","context/AuthContext.js"],"names":["ThemeContext","React","createContext","ThemeProvider","children","useState","currentTheme","setCurrentTheme","Provider","value","themes","CartContext","getCartTotal","cart","items","reduce","total","item","quantity","price","getCartItemCount","count","cartReducer","state","type","payload","console","log","cartItem","find","id","unshift","filter","CartProvider","useReducer","dispatchCartAction","getCartItemQuantity","LocaleContext","LocaleProvider","localeList","locale","setLocale","Auth","props","useContext","AuthContext","login","logout","authStatus","className","onClick","LocaleSelector","onChange","e","target","selectedLocale","map","localeItem","index","key","text","ThemeSelector","theme","Header","style","width","textAlign","float","display","to","PrivateRoute","rest","pathname","useLocation","Cat","lazy","Mouse","Cart","Todo","ProductList","App","fallback","basename","process","path","render","mouse","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","status","AuthProvider","setAuthStatus","history","useHistory","search","query","URLSearchParams","get","push"],"mappings":"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","file":"static/js/main.317cbeca.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nexport const ThemeContext = React.createContext();\n\nexport const ThemeProvider = ({children}) => {\n  const themes = ['light', 'dark']\n  const [currentTheme, setCurrentTheme] = useState('light')\n  return <ThemeContext.Provider value={{currentTheme, setCurrentTheme, themes}}>{children}</ThemeContext.Provider>\n}","import React from 'react'\nimport { useReducer } from 'react'\nexport const CartContext = React.createContext()\n\nconst getCartTotal = (cart) => {\n  return cart.items.reduce((total, item) => {\n    return total + (item.quantity * item.price)\n  }, 0)\n}\nconst getCartItemCount = (cart) => {\n  return cart.items.reduce((count, item) => {\n    return count + item.quantity\n  }, 0)\n}\nconst cartReducer = (state, { type, payload }) => {\n  console.log(state, type, payload)\n  switch (type) {\n    case 'ADD_ITEM':\n      {\n        const cartItem = state.items.find(item => item.id === payload.id)\n        if (cartItem) {\n          // item already in cart, so increment quantity\n          cartItem.quantity = cartItem.quantity + 1\n        } else {\n          // item added first time\n          payload.quantity = 1\n          // add to cart\n          state.items.unshift(payload)\n        }\n        state.total = getCartTotal(state)\n        state.count = getCartItemCount(state)\n        // we need to change state object to trigger change\n        return { ...state }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const cartItem = state.items.find(item => item.id === payload.id)\n        if (cartItem) {\n          if (cartItem.quantity > 1) {\n            cartItem.quantity = cartItem.quantity - 1\n          } else {\n            // remove the item at all\n            state.items = state.items.filter(item => item.id !== cartItem.id)\n          }\n        }\n        state.total = getCartTotal(state)\n        state.count = getCartItemCount(state)\n        // we need to change state object to trigger change\n        return { ...state }\n      }\n    default:\n      return state\n  }\n}\nexport const CartProvider = ({ children }) => {\n  const [ cart, dispatchCartAction ] = useReducer(cartReducer, { items: [], total: 0, count: 0 })\n  const getCartItemQuantity = (id) => {\n    const cartItem = cart.items.find(item => item.id === id)\n    if (cartItem) {\n      return cartItem.quantity\n    } else {\n      return 0\n    }\n  }\n  return <CartContext.Provider value={{ cart, dispatchCartAction, getCartItemQuantity }}>{children}</CartContext.Provider>\n}","import React from 'react';\nimport { useState } from 'react';\nexport const LocaleContext = React.createContext();\n\nexport const LocaleProvider = ({ children }) => {\n  const localeList = [\n    {id: 'en-us', 'text': 'English-United States'},\n    {id: 'en-gb', 'text': 'English- Great Brittain'},\n    {id: 'en-ca', 'text': 'English-Canada'}\n  ];\n  const [locale, setLocale] = useState(localeList[1]);\n  return <LocaleContext.Provider value={{ locale, setLocale, localeList }}>{children}</LocaleContext.Provider>\n}","import React, { Fragment, useContext } from \"react\"\nimport {AuthContext} from \"../context/AuthContext\";\n\nconst Auth = props => {\n  const { login, logout, authStatus } = useContext(AuthContext);\n  return (\n    <Fragment>\n      {\n        authStatus\n          ? <button className=\"custom\" onClick={logout}>Logout</button>\n          : <button className=\"custom\" onClick={login}>Login</button>\n      }\n    </Fragment>\n  )\n}\n\nexport default Auth;","import React, { useContext } from 'react'\nimport { LocaleContext } from '../context/LocaleContext';\n\nconst LocaleSelector = () => {\n  const { localeList, setLocale, locale } = useContext(LocaleContext);\n  const updateLocale = e => {\n    console.log(e.target.value)\n    const selectedLocale = localeList.find(item => item.id === e.target.value)\n    setLocale(selectedLocale)\n  }\n  return (\n    <select value={locale.id} onChange={updateLocale}>\n      {\n        localeList.map((localeItem, index) => {\n          return <option value={localeItem.id} key={index + localeItem.id}>\n            {localeItem.text}\n          </option>\n        })\n      }\n    </select>\n  )\n}\n\nexport default LocaleSelector\n","import React from 'react'\nimport { useContext } from 'react'\nimport { ThemeContext } from '../context/ThemeContext'\n\nconst ThemeSelector = () => {\n  const { currentTheme, setCurrentTheme, themes } = useContext(ThemeContext)\n  return (\n    <select value={currentTheme} onChange={(e) => setCurrentTheme(e.target.value)}>\n      {\n        themes.map(\n          (theme, index) => <option key={theme + index} value={theme}>{theme}</option>\n        )\n      }\n    </select>\n  )\n}\n\nexport default ThemeSelector\n","import React, { Fragment, useContext } from \"react\"\nimport { AuthContext } from \"../context/AuthContext\";\nimport LocaleSelector from \"./LocaleSelector\";\nimport ThemeSelector from \"./ThemeSelector\";\nimport { Link } from \"react-router-dom\";\nimport { CartContext } from \"../context/CartContext\";\nimport Auth from \"./Auth\";\n\nconst Header = () => {\n  const { authStatus } = useContext(AuthContext)\n  const { cart } = useContext(CartContext)\n  return (\n    <Fragment>\n      <div style={{ width: '100%', textAlign: 'center' }}>\n        <div style={{ float: 'right', 'marginRight': '10px', display: 'inline-block' }}>\n          <ThemeSelector></ThemeSelector>\n          <LocaleSelector></LocaleSelector>\n        </div>\n        {\n          authStatus ?\n            <Fragment>\n              <Link to='/'>Fun</Link>\n              |<Link to='/todo'>ToDo</Link>\n              |<Link to='/products'>Shop</Link>\n              |<Link to='/cart'>Your Cart({cart.count})</Link>|\n            </Fragment>\n            : ''\n        }\n        <Auth />\n        <hr />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Header;","import React from 'react'\nimport { Route, Redirect, useLocation } from 'react-router'\nimport { useContext } from 'react'\nimport { AuthContext } from '../context/AuthContext'\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const { pathname } = useLocation();\n  const { authStatus } = useContext(AuthContext);\n  return (\n    authStatus\n      ? <Route {...rest}>{children}</Route>\n      : <Redirect to={`/auth?redirectTo=${pathname}`}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React, { Suspense } from 'react';\n\nimport Header from './components/Header';\nimport { AuthProvider } from './context/AuthContext';\nimport { LocaleProvider } from './context/LocaleContext';\nimport { useContext } from 'react';\nimport { ThemeContext } from './context/ThemeContext';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport { CartProvider } from './context/CartContext';\n// Lazy Loaded routes\nconst Cat = React.lazy(() => import('./Cat'));\nconst Mouse = React.lazy(() => import('./Mouse'));\nconst Cart = React.lazy(() => import('./components/Cart'));\nconst Todo = React.lazy(() => import('./components/Todo'));\nconst Auth = React.lazy(() => import('./components/Auth'));\nconst ProductList = React.lazy(()=> import('./components/ProductList'));\nfunction App() {\n  const { currentTheme } = useContext(ThemeContext);\n  return (\n    <Suspense fallback={<h1>Loading...</h1>}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AuthProvider>\n          <LocaleProvider>\n            <CartProvider>\n              <div className={`app theme-${currentTheme}`}>\n                <Header />\n                <div className=\"container-fluid\">\n\n                  <Switch>\n                    <Route path='/auth'>\n                      <h4><Auth />to Access Private Routes</h4>\n                    </Route>\n                    <PrivateRoute path='/todo' render={() => <Todo />} />\n                    <PrivateRoute path='/products'>\n                      <ProductList />\n                    </PrivateRoute>\n                    <PrivateRoute path='/cart'>\n                      <Cart/>\n                    </PrivateRoute>\n                    <PrivateRoute path='/'>\n                      {/* render prop example */}\n                      <Mouse render={(mouse) => <Cat mouse={mouse} />} />\n                    </PrivateRoute>\n                  </Switch>\n                </div>\n              </div>\n            </CartProvider>\n          </LocaleProvider>\n        </AuthProvider>\n      </BrowserRouter>\n    </Suspense>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n\n    </ThemeProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nexport const AuthContext = React.createContext({ status: false, login: () => { }, logout: () => { } });\n\nexport const AuthProvider = ({ children }) => {\n  const [authStatus, setAuthStatus] = useState(false);\n  const history = useHistory()\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  const login = () => {\n    setAuthStatus(true)\n    if (query.get('redirectTo')) {\n      history.push(query.get('redirectTo'))\n    } else {\n      history.push('/products')\n    }\n  }\n  const logout = () => {\n    setAuthStatus(false)\n  }\n  return <AuthContext.Provider value={{ login, logout, authStatus }}>{children}</AuthContext.Provider>\n}"],"sourceRoot":""}